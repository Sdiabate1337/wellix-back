

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: wellix-postgres
    environment:
      POSTGRES_DB: wellix
      POSTGRES_USER: wellix_user
      POSTGRES_PASSWORD: wellix_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wellix_user -d wellix"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Test Database
  postgres-test:
    image: postgres:15-alpine
    container_name: wellix-postgres-test
    environment:
      POSTGRES_DB: wellix_test
      POSTGRES_USER: wellix_test_user
      POSTGRES_PASSWORD: wellix_test_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wellix_test_user -d wellix_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: wellix-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Wellix Backend API
  backend:
    build: .
    container_name: wellix-backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://wellix_user:wellix_password@postgres:5432/wellix
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
